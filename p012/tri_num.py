#coding=utf-8
"""

The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

    1: 1
    3: 1,3
    6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?

"""
PrimeArr=[2,3,5,7,11,13,17,19]
DivArr = []
# Tri Num with 2 divisors
Num = 1 + 2

def main():
    global DivArr, PrimeArr, Num
    counter = 2
    PrimeExp = []
    while 1:
        DivCnt = 0
        for Exp in PrimeExp:
            DivCnt += Exp
        if 1 + DivCnt > 500:
            print PrimeExp
            print DivArr
            print "Solution: " + str(Num)
            break
        # Get the next number
        counter += 1
        Num += counter
        DivArr = []
        if counter % 10000 == 0:
            print counter
        # Check to see if prime
        if not isPrime(Num):
            # Iterate through list of primes to build up prime factors
            i = 0
            for i in range(0, len(PrimeArr)):
                if Num % PrimeArr[i] == 0:
                    DivArr.append(PrimeArr[i])
                elif PrimeArr[i] ** 2 > Num:
                    break

            # Iterate through and calculate how many of each factor exists
            PrimeExp = []
            for divisor in DivArr:
                CheckNum = Num
                ExpCnt = 1
                while CheckNum % divisor == 0 and CheckNum > 1:
                    ExpCnt += 1
                    CheckNum /= divisor
                PrimeExp.append(ExpCnt)


# Helper to determine if a number is prime
def isPrime(Num):
    global PrimeArr
    for Factor in PrimeArr:
      if Num % Factor == 0:
        return False
      elif Factor ** 2 > Num:
        break
    if (Num > PrimeArr[-1]):
        PrimeArr.append(Num)
    return True

if __name__ == "__main__":
  main()
